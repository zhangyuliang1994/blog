server {
    listen 80;
    server_name your-domain.com www.your-domain.com; # 替换成你的域名

    # 网站根目录指向 out 文件夹
    root /Users/zhangyuliang/code/blog/out;
    index index.html;

    # 添加安全头信息（原来在 next.config.js 中配置的）
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' giscus.app analytics.umami.is twikoo.xiaofeng.show vercel.app vercel.com va.vercel-scripts.com *.vercel-scripts.com; style-src 'self' 'unsafe-inline'; img-src * blob: data:; media-src *.s3.amazonaws.com; connect-src *; font-src 'self'; frame-src giscus.app twikoo.xiaofeng.show";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header X-Frame-Options "DENY";
    add_header X-Content-Type-Options "nosniff";
    add_header X-DNS-Prefetch-Control "on";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";

    # 开启 gzip 压缩提高性能
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
    
    # 设置缓存策略
    location /_next/static/ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }
    
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000";
    }

    # 处理 SPA 路由
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # 配置错误页面
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
}

# 如果需要启用 HTTPS，请取消下面的注释，并配置证书路径
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#     
#     ssl_certificate /path/to/your/fullchain.pem;
#     ssl_certificate_key /path/to/your/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     
#     # 其他配置与上面 HTTP 服务器块相同
#     root /Users/zhangyuliang/code/blog/out;
#     # ... 其余配置同上 ...
# }
# 
# # HTTP 重定向到 HTTPS
# server {
#     listen 80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$host$request_uri;
# } 